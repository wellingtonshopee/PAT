"""
Django settings for meu_projeto_admin project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
# Importações ajustadas para usar Config e RepositoryEnv do decouple
from decouple import Config, RepositoryEnv
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Força a leitura do arquivo .env no BASE_DIR
# O arquivo .env deve estar no mesmo nível da pasta meu_projeto_admin e manage.py
env_path = os.path.join(BASE_DIR, '.env')
config = Config(RepositoryEnv(env_path))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool) # Lê do .env e converte para booleano

# --- AJUSTE DEFINITIVO AQUI: ALLOWED_HOSTS para testes ---
# Esta configuração força o ALLOWED_HOSTS para '*' (qualquer host)
# SEMPRE, independente do DEBUG, para garantir que funcione em ambientes de teste.
# !!! ATENÇÃO: ESSA É UMA CONFIGURAÇÃO DE TESTE/DESENVOLVIMENTO.
# PARA PRODUÇÃO REAL, VOCÊ DEVE LISTAR EXPLICITAMENTE SEUS DOMÍNIOS.
ALLOWED_HOSTS = ['*'] # Permite qualquer host para fins de teste

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize', # Útil para formatação de números
    'usuarios',
    'estoque',
    'patrimonio',
    'fornecedores',
    'clientes',
    'epi', # App que contém o modelo Colaborador
    'rh',
    'crispy_forms',
    'crispy_bootstrap5',
    'financeiro',
    'django_filters', # Para filtragem avançada de dados
    'widget_tweaks', # Para personalizar widgets de formulário no template
]

MIDDLEWARE = [
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # --- Middleware de log com o nome da classe corrigido ---
    'usuarios.middleware.RequestLogMiddleware', # <--- CORRIGIDO AQUI!
]

ROOT_URLCONF = 'meu_projeto_admin.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'], # Caminho para a pasta de templates globais do projeto
        'APP_DIRS': True, # Permite que o Django procure templates dentro das pastas 'templates' de cada app
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'meu_projeto_admin.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': dj_database_url.parse(config('DATABASE_URL'), conn_max_age=600),
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'pt-br'
TIME_ZONE = 'America/Sao_Paulo'
USE_I18N = True # Habilita o sistema de tradução do Django
USE_TZ = True   # Habilita suporte a fusos horários


# --- Configurações de Localização (L10N) para o Brasil ---
USE_L10N = True # Habilita formatação localizada de números e datas
DECIMAL_SEPARATOR = ','
USE_THOUSAND_SEPARATORS = True
THOUSAND_SEPARATOR = '.'
NUMBER_GROUPING = (3, 0)
# --------------------------------------------------------


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# STATICFILES_DIRS: Lista de pastas adicionais onde o Django irá procurar arquivos estáticos
# em tempo de desenvolvimento (além das pastas 'static' dentro de cada app).
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

# STATIC_ROOT: Pasta onde 'python manage.py collectstatic' vai copiar todos os arquivos estáticos
# de todos os apps e STATICFILES_DIRS, para ser servido em produção.
# Esta pasta deve ser vazia antes de rodar collectstatic.
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

# Configuração para servir arquivos estáticos de forma eficiente em produção via Whitenoise
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'


# --- Configurações para arquivos de Mídia (uploads de usuários, como fotos, PDFs) ---
# MEDIA_URL: O prefixo da URL para acessar arquivos de mídia no navegador.
# Ex: se uma foto estiver em media/fotos/minha_foto.jpg, a URL será /media/fotos/minha_foto.jpg
MEDIA_URL = '/media/'

# MEDIA_ROOT: O caminho absoluto no sistema de arquivos onde o Django irá armazenar
# fisicamente os arquivos de mídia enviados pelos usuários.
# IMPORTANTE: Crie esta pasta na raiz do seu projeto se ela não existir.
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# -----------------------------------------------------------------------------------------


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# --- Configurações de Autenticação e Redirecionamento ---
# URL para redirecionar após um login bem-sucedido
LOGIN_REDIRECT_URL = '/'
# URL da página de login
LOGIN_URL = '/accounts/login/'
# URL para redirecionar após um logout bem-sucedido
LOGOUT_REDIRECT_URL = '/accounts/login/'
# --------------------------------------------------------

# --- Configurações para Django Crispy Forms ---
CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"
# ---------------------------------------------
